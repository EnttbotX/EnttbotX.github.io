{
  "XPad": {
    "title": "XPad",
    "icon": "https://www.spigotmc.org/data/resource_icons/116/116150.jpg?1748763701",
    "content": [
      "[section==Info]",
      "*msj*XPad*msj* is the best launch-pads plugin",
      "in this wiki you will have a tutorial",
      "of how to configure the plugin",
      "[section==Starting (CMDs)]",
      "*msj*USING COMMANDS*msj*",
      "use /xpad create <id> (like 3)",
      "",
      "you can use that default pad",
      "or can use '/xpad edit' command",
      "[section==Starting (Via Config)]",
      "you can change:",
      "- bottom-block",
      "- launch-plate",
      "- sound",
      "",
      "etc.",
      "[section==General Errors]",
      "Generally errors are caused by bad config",
      "like invalid launch-plate,",
      "invalid bottom-block,",
      "or something like that",
      "[section==General Tips]",
      "Check the config after changes",
      "- do not touch config-version",
      "- see if you block name is the one",
      "of your version.",
      "[section==Recomended steps]",
      "1: /*/xpad create 3/*",
      "2: /*/xpad edit 3 bottom-block ANY/*",
      "3: /*/xpad edit 3 direction player-view/*",
      "",
      "and there you have a default pad!"
    ]
  },
  "EnttAPI": {
    "title": "EnttAPI",
    "icon": "https://www.spigotmc.org/data/resource_icons/127/127845.jpg?1754810224",
    "modules": {
      "Integrate": {
        "title": "Integrating EnttAPI into Your Plugin",
        "content": [
          "[section==Explanation]",
          "EnttAPI is available through JitPack, so you can include it in any build system that supports Maven repositories.",
          "Replace *Tag* with the release/tag you want to use from the GitHub repository.",
          "",
          "Supported build systems: Maven, Gradle, Gradle.kts, SBT, Leiningen",
          
          "[section==Maven]",
          "Add the JitPack repository:",
          "/*<repositories>*/",
          "/*<repository>*/",
          "/*<id>jitpack.io</id>*/",
          "/*<url>https://jitpack.io</url>*/",
          "/*</repository>*/",
          "/*</repositories>*/",
          "Add the dependency:",
          "/*<dependencies>*/",
          "/*<dependency>*/",
          "/*<groupId>com.github.EnttbotX</groupId>*/",
          "/*<artifactId>EnttAPI</artifactId>*/",
          "/*<version>Tag</version>*/",
          "/*</dependency>*/",
          "/*</dependencies>*/",
          
          "[section==Gradle]",
          "/*dependencyResolutionManagement {*/",
          "/*repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)*/",
          "/*repositories {*/",
          "/*mavenCentral()*/",
          "/*maven { url 'https://jitpack.io' }*/",
          "/*}*/",
          "/*}*/",
          "/*dependencies {*/",
          "/*implementation 'com.github.EnttbotX:EnttAPI:Tag'*/",
          "/*}*/",
          
          "[section==Gradle.kts]",
          "/*dependencyResolutionManagement {*/",
          "/*repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)*/",
          "/*repositories {*/",
          "/*mavenCentral()*/",
          "/*maven { url = uri(\"https://jitpack.io\") }*/",
          "/*}*/",
          "/*}*/",
          "/*dependencies {*/",
          "/*implementation(\"com.github.EnttbotX:EnttAPI:Tag\")*/",
          "/*}*/",
          
          "[section==SBT]",
          "/*resolvers += \"jitpack\" at \"https://jitpack.io\"*/",
          "/*libraryDependencies += \"com.github.EnttbotX\" % \"EnttAPI\" % \"Tag\"*/",
          
          "[section==Leiningen]",
          "/*:repositories [[\"jitpack\" \"https://jitpack.io\"]]*/",
          "/*:dependencies [[com.github.EnttbotX/EnttAPI \"Tag\"]]*/"
        ]
      },
      "MySQL": {
        "title": "MySQL",
        "content": [
          "[section==Info]",
          "*msj*MySQLAPI*msj* is a database module for EnttAPI",
          "It allows your plugin to connect and interact",
          "with a MySQL database easily.",
          "You can use it to store, update and fetch data",
          "without writing repetitive JDBC code.",
          
          "[section==Starting (Setup)]",
          "*msj*INITIALIZING THE MODULE*msj*",
          "First, create an instance of the module:",
          "/*/MySQL mysql = new MySQL();/*",
          "",
          "Then, connect to your database:",
          "/*/mysql.connect(\"localhost\", \"3306\", \"database\", \"user\", \"pass\");/*",
          "",
          "Always check if connected before running commands:",
          "/*/if(mysql.isConnected()) { ... }/*",
          
          "[section==Basic Usage]",
          "*msj*CREATE TABLE*msj*",
          "/*/mysql.createTable(\"users\", \"id INT PRIMARY KEY, name VARCHAR(32)\");/*",
          "",
          "*msj*INSERT DATA*msj*",
          "/*/mysql.executeCommand(\"INSERT INTO users (id, name) VALUES (1, 'Steve')\");/*",
          "",
          "*msj*FETCH DATA*msj*",
          "/*/ResultSet rs = mysql.getResult(\"SELECT * FROM users\");/*",
          "/*/while(rs.next()) { Bukkit.broadcastMessage(rs.getString(\"name\")); }/*",
          
          "[section==Disconnecting]",
          "When your plugin disables or you no longer need the connection:",
          "/*/mysql.disconnect();/*",
          "This frees resources and avoids memory leaks.",
          
          "[section==General Errors]",
          "Most errors come from:",
          "- Wrong credentials",
          "- Database not running",
          "- Syntax errors in SQL commands",
          "",
          "Always check your console for stacktraces.",
          
          "[section==General Tips]",
          "- Always close your ResultSet when done",
          "- Avoid blocking main thread with heavy queries",
          "- Use try-catch for database operations",
          "- Test your SQL syntax in a MySQL client first",
          
          "[section==Recommended steps]",
          "1: /*/MySQLAPI mysql = new MySQLAPI();/*",
          "2: /*/mysql.connect(\"localhost\", \"3306\", \"test\", \"root\", \"1234\");/*",
          "3: /*/mysql.createTable(\"data\", \"uuid VARCHAR(36), coins INT\");/*",
          "4: /*/mysql.executeCommand(\"INSERT INTO data VALUES ('uuid-here', 100)\");/*",
          "5: /*/mysql.disconnect();/*",
          "",
          "And you have MySQL integration in your plugin!"
        ]
      }
    }
  }
}
