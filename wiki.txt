{
  "title": "XPad",
  "icon": "https://www.spigotmc.org/data/resource_icons/116/116150.jpg?1748763701",
  "content": [
    "[section==Info]",
    "*msj*XPad*msj* is the best launch-pads plugin",
    "in this wiki you will have a tutorial",
    "of how to configure the plugin",
    "[section==Starting (CMDs)]",
    "*msj*USING COMMANDS*msj*",
    "use /xpad create <id> (like 3)",
    "",
    "you can use that default pad",
    "or can use '/xpad edit' command",
    "[section==Starting (Via Config)]",
    "you can change:",
    "- bottom-block",
    "- launch-plate",
    "- sound",
    "",
    "etc.",
    "[section==General Errors]",
    "Generally errors are caused by bad config",
    "like invalid launch-plate,",
    "invalid bottom-block,",
    "or something like that",
    "[section==General Tips]",
    "Check the config after changes",
    "- do not touch config-version",
    "- see if you block name is the one",
    "of your version.",
    "[section==Recomended steps]",
    "1: /*/xpad create 3/*",
    "2: /*/xpad edit 3 bottom-block ANY/*",
    "3: /*/xpad edit 3 direction player-view/*",
    "",
    "and there you have a default pad!"
  ]
}

{
  "title": "EnttAPI",
  "icon": "https://www.spigotmc.org/data/resource_icons/127/127845.jpg?1754810224",
  "modules": {
    "Integrate the API": {
      "title": "Integrating EnttAPI into Your Plugin",
      "content": [
        "[section==Explanation]",
        "EnttAPI is available through JitPack, so you can include it in any build system that supports Maven repositories.",
        "Replace *Tag* with the release/tag you want to use from the GitHub repository.",
        "",
        "Supported build systems: Maven, Gradle, Gradle.kts, SBT, Leiningen",
        
        "[section==Maven]",
        "Add the JitPack repository:",
        "/*<repositories>\n\t<repository>\n\t\t<id>jitpack.io</id>\n\t\t<url>https://jitpack.io</url>\n\t</repository>\n</repositories>/*",
        "Add the dependency:",
        "/*<dependencies>\n\t<dependency>\n\t\t<groupId>com.github.EnttbotX</groupId>\n\t\t<artifactId>EnttAPI</artifactId>\n\t\t<version>Tag</version>\n\t</dependency>\n</dependencies>/*",
        
        "[section==Gradle]",
        "/*dependencyResolutionManagement {\n\trepositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n\trepositories {\n\t\tmavenCentral()\n\t\tmaven { url 'https://jitpack.io' }\n\t}\n}\n\ndependencies {\n\timplementation 'com.github.EnttbotX:EnttAPI:Tag'\n}/*",
        
        "[section==Gradle.kts]",
        "/*dependencyResolutionManagement {\n\trepositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n\trepositories {\n\t\tmavenCentral()\n\t\tmaven { url = uri(\"https://jitpack.io\") }\n\t}\n}\n\ndependencies {\n\timplementation(\"com.github.EnttbotX:EnttAPI:Tag\")\n}/*",
        
        "[section==SBT]",
        "/*resolvers += \"jitpack\" at \"https://jitpack.io\"\n\nlibraryDependencies += \"com.github.EnttbotX\" % \"EnttAPI\" % \"Tag\"/*",
        
        "[section==Leiningen]",
        "/*:repositories [[\"jitpack\" \"https://jitpack.io\"]]\n\n:dependencies [[com.github.EnttbotX/EnttAPI \"Tag\"]]/*"
      ]
    },
    "MySQL": {
      "title": "MySQL",
      "content": [
        "[section==Info]",
        "MySQLAPI is a database module for EnttAPI",
        "It allows your plugin to connect and interact",
        "with a MySQL database easily.",
        "You can use it to store, update and fetch data",
        "without writing repetitive JDBC code.",
        
        "[section==Starting (Setup)]",
        "INITIALIZING THE MODULE",
        "First, create an instance of the module:",
        "/*/MySQL mysql = new MySQL();/*",
        "",
        "Then, connect to your database:",
        "/*/mysql.connect(\"localhost\", \"3306\", \"database\", \"user\", \"pass\");/*",
        "",
        "Always check if connected before running commands:",
        "/*/if(mysql.isConnected()) { ... }/*",
        
        "[section==Basic Usage]",
        "CREATE TABLE",
        "/*/mysql.createTable(\"users\", \"id INT PRIMARY KEY, name VARCHAR(32)\");/*",
        "",
        "INSERT DATA",
        "/*/mysql.executeCommand(\"INSERT INTO users (id, name) VALUES (1, 'Steve')\");/*",
        "",
        "FETCH DATA",
        "/*/ResultSet rs = mysql.getResult(\"SELECT * FROM users\");/*",
        "/*/while(rs.next()) { Bukkit.broadcastMessage(rs.getString(\"name\")); }/*",
        
        "[section==Disconnecting]",
        "When your plugin disables or you no longer need the connection:",
        "/*/mysql.disconnect();/*",
        "This frees resources and avoids memory leaks.",
        
        "[section==General Errors]",
        "Most errors come from:",
        "- Wrong credentials",
        "- Database not running",
        "- Syntax errors in SQL commands",
        "",
        "Always check your console for stacktraces.",
        
        "[section==General Tips]",
        "- Always close your ResultSet when done",
        "- Avoid blocking main thread with heavy queries",
        "- Use try-catch for database operations",
        "- Test your SQL syntax in a MySQL client first",
        
        "[section==Recommended steps]",
        "1: /*/MySQLAPI mysql = new MySQLAPI();/*",
        "2: /*/mysql.connect(\"localhost\", \"3306\", \"test\", \"root\", \"1234\");/*",
        "3: /*/mysql.createTable(\"data\", \"uuid VARCHAR(36), coins INT\");/*",
        "4: /*/mysql.executeCommand(\"INSERT INTO data VALUES ('uuid-here', 100)\");/*",
        "5: /*/mysql.disconnect();/*",
        "",
        "And you have MySQL integration in your plugin!"
      ]
    }
  }
}
